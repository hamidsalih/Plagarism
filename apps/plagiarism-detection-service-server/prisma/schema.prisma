datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Document {
  id              String           @id @default(cuid())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  title           String?
  content         String?
  uploadedAt      DateTime?
  analysisResults AnalysisResult[]
  uploadedBy      String?
  reports         Report[]
  documentContent String?
  uploadedByUser  String?
  documentTitle   String?
}

model AnalysisResult {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  result     Json?
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String?
}

model Algorithm {
  id          String    @id @default(cuid())
  description String?
  createdAt   DateTime?
  name        String?
}

model User {
  id        String          @id @default(cuid())
  firstName String?
  lastName  String?
  email     String?
  password  String?
  username  String?
  roles     EnumUserRoles[]
  userEmail String?
}

model Check {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  analysis        Json?
  similarityScore Int?
  document        Document? @relation(fields: [documentId], references: [id])
  documentId      String?
}

model PlagiarismDocument {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlagiarismAlgorithm {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlagiarismUser {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlagiarismReport {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum EnumUserRoles {
  Option1
}
