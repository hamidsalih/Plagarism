/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PlagiarismUser as PrismaPlagiarismUser } from "@prisma/client";

export class PlagiarismUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlagiarismUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.plagiarismUser.count(args);
  }

  async plagiarismUsers(
    args: Prisma.PlagiarismUserFindManyArgs
  ): Promise<PrismaPlagiarismUser[]> {
    return this.prisma.plagiarismUser.findMany(args);
  }
  async plagiarismUser(
    args: Prisma.PlagiarismUserFindUniqueArgs
  ): Promise<PrismaPlagiarismUser | null> {
    return this.prisma.plagiarismUser.findUnique(args);
  }
  async createPlagiarismUser(
    args: Prisma.PlagiarismUserCreateArgs
  ): Promise<PrismaPlagiarismUser> {
    return this.prisma.plagiarismUser.create(args);
  }
  async updatePlagiarismUser(
    args: Prisma.PlagiarismUserUpdateArgs
  ): Promise<PrismaPlagiarismUser> {
    return this.prisma.plagiarismUser.update(args);
  }
  async deletePlagiarismUser(
    args: Prisma.PlagiarismUserDeleteArgs
  ): Promise<PrismaPlagiarismUser> {
    return this.prisma.plagiarismUser.delete(args);
  }
}
